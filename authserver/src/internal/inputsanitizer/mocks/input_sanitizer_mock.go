// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks_inputsanitizer

import mock "github.com/stretchr/testify/mock"

// InputSanitizer is an autogenerated mock type for the InputSanitizer type
type InputSanitizer struct {
	mock.Mock
}

// Sanitize provides a mock function with given fields: str
func (_m *InputSanitizer) Sanitize(str string) string {
	ret := _m.Called(str)

	if len(ret) == 0 {
		panic("no return value rouspecified for Sanitize")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(str)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewInputSanitizer creates a new instance of InputSanitizer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInputSanitizer(t interface {
	mock.TestingT
	Cleanup(func())
}) *InputSanitizer {
	mock := &InputSanitizer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
