FROM golang:1.23.2-alpine AS build

ARG version
ARG buildDate
ARG gitCommit

WORKDIR /app/src

# Create directories first
RUN mkdir -p /app/src/core /app/src/authserver

# Copy go.mod files into the directories
COPY ./core/go.mod /app/src/core/
COPY ./authserver/go.mod /app/src/authserver/

# Debug: List contents
RUN ls -la /app/src/core
RUN ls -la /app/src/authserver

# Download dependencies for core
WORKDIR /app/src/core
RUN cat go.mod
RUN go mod download

# Download dependencies for authserver
WORKDIR /app/src/authserver
RUN cat go.mod
RUN go mod download


# Copy the rest of the source code
WORKDIR /app/src
COPY ./authserver ./authserver
COPY ./core ./core

RUN mkdir -p /app/bin

WORKDIR /app/src/authserver
RUN go build -tags=production -ldflags="-X 'github.com/leodip/goiabada/authserver/internal/constants.Version=${version}' -X 'github.com/leodip/goiabada/authserver/internal/constants.BuildDate=${buildDate}' -X 'github.com/leodip/goiabada/authserver/internal/constants.GitCommit=${gitCommit}'" -o ../../bin/goiabada-authserver ./cmd/goiabada-authserver/main.go

# ------------------------------------------------------------------------------

FROM alpine:latest AS final

WORKDIR /app

RUN apk add --no-cache tzdata alpine-conf
RUN /sbin/setup-timezone -z Europe/Lisbon

COPY --from=build /app/bin/goiabada-authserver ./

ENTRYPOINT ["/app/goiabada-authserver"]