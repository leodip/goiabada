//go:build !production

// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks_tcputils

import mock "github.com/stretchr/testify/mock"

// TCPConnectionTester is an autogenerated mock type for the TCPConnectionTester type
type TCPConnectionTester struct {
	mock.Mock
}

// TestTCPConnection provides a mock function with given fields: host, port
func (_m *TCPConnectionTester) TestTCPConnection(host string, port int) error {
	ret := _m.Called(host, port)

	if len(ret) == 0 {
		panic("no return value specified for TestTCPConnection")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(host, port)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTCPConnectionTester creates a new instance of TCPConnectionTester. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTCPConnectionTester(t interface {
	mock.TestingT
	Cleanup(func())
}) *TCPConnectionTester {
	mock := &TCPConnectionTester{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
