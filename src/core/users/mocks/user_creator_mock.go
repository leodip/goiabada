// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks_users

import (
	models "github.com/leodip/goiabada/core/models"
	users "github.com/leodip/goiabada/core/users"
	mock "github.com/stretchr/testify/mock"
)

// UserCreator is an autogenerated mock type for the UserCreator type
type UserCreator struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: input
func (_m *UserCreator) CreateUser(input *users.CreateUserInput) (*models.User, error) {
	ret := _m.Called(input)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 *models.User
	var r1 error
	if rf, ok := ret.Get(0).(func(*users.CreateUserInput) (*models.User, error)); ok {
		return rf(input)
	}
	if rf, ok := ret.Get(0).(func(*users.CreateUserInput) *models.User); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	if rf, ok := ret.Get(1).(func(*users.CreateUserInput) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUserCreator creates a new instance of UserCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserCreator {
	mock := &UserCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
