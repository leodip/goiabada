//go:build !production

// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks_validator

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	validators "github.com/leodip/goiabada/core/validators"
)

// AddressValidator is an autogenerated mock type for the AddressValidator type
type AddressValidator struct {
	mock.Mock
}

// ValidateAddress provides a mock function with given fields: ctx, input
func (_m *AddressValidator) ValidateAddress(ctx context.Context, input *validators.ValidateAddressInput) error {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for ValidateAddress")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *validators.ValidateAddressInput) error); ok {
		r0 = rf(ctx, input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAddressValidator creates a new instance of AddressValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAddressValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *AddressValidator {
	mock := &AddressValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
