//go:build !production

// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks_validator

import mock "github.com/stretchr/testify/mock"

// IdentifierValidator is an autogenerated mock type for the IdentifierValidator type
type IdentifierValidator struct {
	mock.Mock
}

// ValidateIdentifier provides a mock function with given fields: identifier, enforceMinLength
func (_m *IdentifierValidator) ValidateIdentifier(identifier string, enforceMinLength bool) error {
	ret := _m.Called(identifier, enforceMinLength)

	if len(ret) == 0 {
		panic("no return value specified for ValidateIdentifier")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, bool) error); ok {
		r0 = rf(identifier, enforceMinLength)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIdentifierValidator creates a new instance of IdentifierValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIdentifierValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IdentifierValidator {
	mock := &IdentifierValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
