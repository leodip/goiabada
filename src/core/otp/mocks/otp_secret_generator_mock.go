//go:build !production

// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks_otp

import mock "github.com/stretchr/testify/mock"

// OtpSecretGenerator is an autogenerated mock type for the OtpSecretGenerator type
type OtpSecretGenerator struct {
	mock.Mock
}

// GenerateOTPSecret provides a mock function with given fields: email, appName
func (_m *OtpSecretGenerator) GenerateOTPSecret(email string, appName string) (string, string, error) {
	ret := _m.Called(email, appName)

	if len(ret) == 0 {
		panic("no return value specified for GenerateOTPSecret")
	}

	var r0 string
	var r1 string
	var r2 error
	if rf, ok := ret.Get(0).(func(string, string) (string, string, error)); ok {
		return rf(email, appName)
	}
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(email, appName)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, string) string); ok {
		r1 = rf(email, appName)
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func(string, string) error); ok {
		r2 = rf(email, appName)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewOtpSecretGenerator creates a new instance of OtpSecretGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOtpSecretGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *OtpSecretGenerator {
	mock := &OtpSecretGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
